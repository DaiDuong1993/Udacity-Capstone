version: 2.1
orbs:
  aws-cli: circleci/aws-cli@1.3.0
  docker: circleci/docker@2.1.2
commands:
  destroy-environment:
    description: Destroy back-end and front-end cloudformation stacks given a workflow ID.
    steps:
       - run:
          name: Destroy environments
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name udacapstone-frontend-${CIRCLE_WORKFLOW_ID:0:7}
            
jobs:
  build-frontend:
    docker:
      - image: cimg/node:16.15.1
        auth:
          username: $DOCKER_USER
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - run:
          name: Build front-end
          command: |
            npm i
            npm run build
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build

  test-frontend:
    docker:
      - image: cimg/node:16.15.1
        auth:
          username: $DOCKER_USER
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          command: |
            npm i
            npm test

  build-docker-app:
    docker:
      - image: cimg/node:16.15.1
        auth:
          username: $DOCKER_USER
          password: $DOCKERHUB_PASSWORD
    steps:
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - checkout
      - docker/check
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Build Front End App
          command: |
            node -v
            npm i
            npm run 
      - docker/dockerlint:
            dockerfile: './Dockerfile'
            treat-warnings-as-errors: false
      - docker/build:
          image: udacity-capstone-image
          registry: 'yangnguyen1993'
          tag: "${CIRCLE_WORKFLOW_ID:0:7}"
      - docker/push:
          digest-path: /tmp/digest.txt
          registry: 'yangnguyen1993'
          image: udacity-capstone-image
          tag: "${CIRCLE_WORKFLOW_ID:0:7}"
      - run:
          command: |
            echo "Digest is: $(</tmp/digest.txt)"
  
  deploy-infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            yum -y install tar
            yum -y install gzip
      - run:
          name: Ensure front-end infrastructure exist
          command: |
            aws cloudformation deploy \
              --template-file .circleci/files/frontend.yml \
              --stack-name udacapstone-frontend-${CIRCLE_WORKFLOW_ID:0:7} \
              --parameter-overrides ID=${CIRCLE_WORKFLOW_ID:0:7} \
              --tags project=udacity-project
      - destroy-environment

workflows:
  default:
    jobs:
      - build-frontend
      - test-frontend:
          requires: [build-frontend]
      - build-docker-app:
          requires: [test-frontend]
      - deploy-infrastructure:
          requires: [build-docker-app]